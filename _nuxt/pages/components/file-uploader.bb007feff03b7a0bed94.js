webpackJsonp([22],{"3STy":function(e,t,i){"use strict";var l=function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("u-admin",[i("div",{staticClass:"card w-100"},[i("div",{staticClass:"card-body"},[i("h2",[e._v("Single File Uploader")]),i("div",{staticClass:"my-2"},[e._v("Basic use. Provide change to handle file changed")]),i("u-single-uploader",{on:{change:e.changeFile}}),i("u-code-viewer",[i("template",{slot:"template"},[e._v('u-single-uploader(@change="changeFile")')]),i("template",{slot:"script"},[e._v("export default {\n  data () {\n    return {\n      form: {\n        file: null\n      }\n    }\n  },\n  methods: {\n    changeFile (file) {\n      // here, do upload to server and response file ...\n      this.file = file\n    }\n  }\n}")])],2),i("div",{staticClass:"my-2"},[e._v('Custom upload message (default message is "Click to Upload File")')]),i("u-single-uploader",{attrs:{"upload-message":"上傳檔案"}}),i("u-code-viewer",[i("template",{slot:"template"},[e._v('u-single-uploader(upload-message="上傳檔案")')])],2),i("div",{staticClass:"my-2"},[e._v('Allow specific types of upload, for example ".jpg, .jpeg, .png"')]),i("u-single-uploader",{attrs:{"accept-type":".jpg, .jpeg, .png"}}),i("u-code-viewer",[i("template",{slot:"template"},[e._v('u-single-uploader(accept-type=".jpg, .jpeg, .png")')])],2),i("div",{staticClass:"my-2"},[e._v("Uploading effect")]),i("u-single-uploader",{attrs:{uploading:!0}}),i("u-code-viewer",[i("template",{slot:"template"},[e._v('u-single-uploader(:uploading="true")')])],2),i("div",{staticClass:"my-2"},[e._v("Set existing file. Allow image, video and other types, and only image will preview.")]),i("u-single-uploader",{attrs:{type:"image","image-path":"https://picsum.photos/308/228/"}}),i("u-code-viewer",[i("template",{slot:"template"},[e._v('u-single-uploader(type="image", image-path="https://picsum.photos/308/228/")')])],2),i("h4",[e._v("Property")]),i("u-table",{attrs:{fields:e.propertyFields,items:e.singleUploaderProperties,hidePagination:!0}}),i("h4",[e._v("Event")]),i("u-table",{attrs:{fields:e.eventFields,items:e.singleUploaderEvents,hidePagination:!0}}),i("h2",[e._v("File Uploader")]),i("div",{staticClass:"my-2"},[e._v("Allow multiple files at same time, but they will clear when you reload page.\nThere is no way to show existing files when component init")]),i("u-uploader",{on:{change:e.changeFiles},model:{value:e.form.files,callback:function(t){e.$set(e.form,"files",t)},expression:"form.files"}}),i("u-code-viewer",[i("template",{slot:"template"},[e._v('u-uploader(v-model="form.files", @change="changeFiles")')]),i("template",{slot:"script"},[e._v("export default {\n  data () {\n    return {\n      form: {\n        files: []\n      }\n    }\n  },\n  methods: {\n    changeFiles (files) {\n      // here, do upload to server and response files ...\n      this.files = files\n    }\n  }\n}")])],2),i("h4",[e._v("Property")]),i("u-table",{attrs:{fields:e.propertyFields,items:e.uploaderProperties,hidePagination:!0}}),i("h4",[e._v("Event")]),i("u-table",{attrs:{fields:e.eventFields,items:e.uploaderEvents,hidePagination:!0}})],1)])])};l._withStripped=!0;var n={render:l,staticRenderFns:[]};t.a=n},VOjX:function(e,t,i){"use strict";t.a={data:function(){return{form:{file:null,files:[]},propertyFields:{property:{label:"Property"},type:{label:"Type"},default_value:{label:"Default Value"},required:{label:"Required"},description:{label:"Description"}},eventFields:{event:{label:"Event"},arguments:{label:"Arguments"},description:{label:"Description"}},singleUploaderProperties:[{property:"file",type:"Object, File",default_value:"null",required:"",description:"Existing file"},{property:"imagePath",type:"String",default_value:"null",required:"",description:"Existing image path"},{property:"type",type:"String",default_value:"null",required:"",description:"Existing file file type"},{property:"uploading",type:"Boolean",default_value:"false",required:"",description:"Show / Hide loading animation"},{property:"uploadMessage",type:"String",default_value:"Click to Upload File",required:"",description:"The hint text below the upload icon"},{property:"acceptType",type:"String",default_value:"null",required:"",description:"Acceptable upload type"},{property:"error",type:"String",default_value:"",required:"",description:"Error text value"}],singleUploaderEvents:[{event:"change",arguments:"File. A File value",description:"File changed"}],uploaderProperties:[{property:"options",type:"Object",default_value:"See Dropzone document (http://www.dropzonejs.com/#config-url)",required:"",description:"Follow vue-clip (https://github.com/thetutlage/vue-clip) configuration options."},{property:"error",type:"String",default_value:"",required:"",description:"Error text value"}],uploaderEvents:[{event:"change",arguments:"Array. An array of File values",description:"Files changed"},{event:"addedFile",arguments:"File",description:"This event is invoked every time a new file gets uploaded. You can listen for this event, you want to have access to each file object within your own parent component."},{event:"sending",arguments:"file, xhr, formData",description:"This event is emitted before making the upload HTTP request. So this is the time to modify the HTTP request and send some custom attributes."},{event:"complete",arguments:"file, status, xhr",description:"This event is called when a file has been processed. It includes error, success both. 3rd argument will be the xhr response, if the error is returned from the server when uploading the file."},{event:"stoppedDragging",arguments:"",description:"This event is invoked when the user stops dragging the file."},{event:"drop",arguments:"",description:"This event is invoked when the user drops a file on the vue-clip area."},{event:"finish",arguments:"",description:"The event is called when all files in the queue have been uploaded to the server."},{event:"maxFilesReached",arguments:"file",description:"The event is called when maxFiles upload limit has been reached. This event will be fired n timesfor each file exceeding the limit."},{event:"upload",arguments:"",description:"The event is called when upload action is triggered"},{event:"removedFile",arguments:"file",description:"This event is invoked every time the file has been removed. This is the nice place to make a request to your server for deleting the file."}]}},methods:{changeFile:function(e){this.file=e},changeFiles:function(e){this.files=e}}}},"X+uK":function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var l=i("VOjX"),n=i("3STy"),a=i("VU/8")(l.a,n.a,!1,null,null,null);a.options.__file="pages/components/file-uploader.vue",t.default=a.exports}});